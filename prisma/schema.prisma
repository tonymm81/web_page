generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model employee_data {
  employee_id    Int      @id @default(autoincrement())
  datetime_emp   DateTime @db.DateTime(0)
  hours_employee Int
  description    String   @db.Text
  jobID          String   @db.Text
  employeeName   String   @db.Text
}

model forecast {
  id_forecast     Int      @id @default(autoincrement())
  temp_min        Int
  temp_max        Int
  wind            Int
  timestamp       DateTime @db.DateTime(0)
  icon            String   @db.Text
  shorDescription String   @db.Text
  visibility      Int
  town_or_city    String   @db.Text
}

model news_data {
  news_id        Int    @id @default(autoincrement())
  description    String @db.Text
  content        String @db.Text
  author         String @db.Text
  puplishDate    String @db.Text
  source         String @db.Text
  title___string String @map("title : string") @db.Text
  url            String @db.Text
  ulr_image      Int
}

model user_data {
  user_id    Int    @id @default(autoincrement())
  user_name  String @db.Text
  user_pwd   String @db.Text
  user_error String @db.Text
}

model blog {
  blog_id       Int             @id @default(autoincrement())
  user_name     String          @db.Text
  start_date    DateTime        @db.DateTime(0)
  headliner     String          @db.Text
  hl_test       String          @db.Text
  editDate      DateTime        @default(now()) @db.DateTime(0)
  answered      Int
  blog_messages blog_messages[]
}

model blog_messages {
  blog_id_related   Int
  message_id        Int      @id @default(autoincrement())
  user_name_message String   @db.Text
  editedDate        DateTime @default(now()) @db.DateTime(0)
  message           String   @db.Text
  blog              blog     @relation(fields: [blog_id_related], references: [blog_id], onUpdate: Restrict, map: "blog_messages_ibfk_1")

  @@index([blog_id_related], map: "blog_id_related")
}
